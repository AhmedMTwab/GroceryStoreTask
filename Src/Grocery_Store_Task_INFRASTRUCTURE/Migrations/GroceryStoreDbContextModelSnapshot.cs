// <auto-generated />
using System;
using Grocery_Store_Task_INFRASTRUCTURE.ApplicationContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Grocery_Store_Task_INFRASTRUCTURE.Migrations
{
    [DbContext(typeof(GroceryStoreDbContext))]
    partial class GroceryStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CartProduct", b =>
                {
                    b.Property<Guid>("CartProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductCartId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartProductsId", "ProductCartId");

                    b.HasIndex("ProductCartId");

                    b.ToTable("CartProduct");
                });

            modelBuilder.Entity("Grocery_Store_Task_DOMAIN.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeSlotDate")
                        .HasColumnType("DateTime2");

                    b.HasKey("Id");

                    b.HasIndex("TimeSlotDate");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Grocery_Store_Task_DOMAIN.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7000-8000-000000000001"),
                            Category = 0,
                            Description = "Ergonomic wireless mouse with adjustable DPI settings, perfect for office and casual gaming.",
                            Name = "Wireless Mouse"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7000-8000-000000000002"),
                            Category = 1,
                            Description = "Freshly picked organic Gala apples, sweet and crisp, ideal for snacking or baking.",
                            Name = "Organic Apples"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7000-8000-000000000003"),
                            Category = 2,
                            Description = "Handcrafted custom-made leather sofa, designed for comfort and durability. Lead time: 4 weeks.",
                            Name = "Custom Leather Sofa"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7000-8000-000000000004"),
                            Category = 0,
                            Description = "Compact and portable Bluetooth keyboard with multi-device connectivity, great for tablets and phones.",
                            Name = "Bluetooth Keyboard"
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7000-8000-000000000005"),
                            Category = 1,
                            Description = "Freshly baked artisan sourdough bread, made with natural yeast and slow fermentation for a rich flavor.",
                            Name = "Artisan Sourdough"
                        });
                });

            modelBuilder.Entity("Grocery_Store_Task_DOMAIN.Models.TimeSlot", b =>
                {
                    b.Property<DateTime>("StartDate")
                        .HasColumnType("DateTime2");

                    b.Property<bool>("IsGreen")
                        .HasColumnType("bit");

                    b.HasKey("StartDate");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("CartProduct", b =>
                {
                    b.HasOne("Grocery_Store_Task_DOMAIN.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("CartProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Grocery_Store_Task_DOMAIN.Models.Cart", null)
                        .WithMany()
                        .HasForeignKey("ProductCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Grocery_Store_Task_DOMAIN.Models.Cart", b =>
                {
                    b.HasOne("Grocery_Store_Task_DOMAIN.Models.TimeSlot", "TimeSlot")
                        .WithMany("SlotProducts")
                        .HasForeignKey("TimeSlotDate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("Grocery_Store_Task_DOMAIN.Models.TimeSlot", b =>
                {
                    b.Navigation("SlotProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
